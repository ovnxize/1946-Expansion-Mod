send_volunteers = {

	requires_approval = yes
	
	unlocking_technologies = {
		logistics
	}

	potential = {
		NOT = { is_country_type = decentralized }
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}	
		is_at_war = no
	}

	possible = {
		scope:target_country = {
			is_at_war = yes
			NOT = { is_diplomatic_play_enemy_of = ROOT }
		}
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}
		custom_tooltip = {
			text = DIPLO_ACTION_MARKET_CONNECTION_REQUIRED
			OR = {	
				AND = {
					market = { has_port = yes }
					scope:target_country.market = { has_port = yes }
				}
				scope:actor.market = {
					any_scope_country = {
						is_adjacent = root
					}
				}
			}
		}
		NOT = { has_war_with = scope:target_country }
		has_diplomatic_relevance = scope:target_country		
	}

	accept_effect = {
		# Gives the target country an obligation to root just so there is a slight negative for the country receiving volunteers. 
		custom_tooltip = {
			text = gets_obligation
			scope:target_country = { set_owes_obligation_to = { country = root setting = yes } }
			if = {
				limit = {
					root = {
						owes_obligation_to = scope:target_country			
					}			
				}
				root = { set_owes_obligation_to = { country = scope:target_country setting = no } }
			}		
			else_if = {
				limit = {
					scope:target_country = {
						NOT = { owes_obligation_to = root }					
					}			
				}
				scope:target_country = { set_owes_obligation_to = { country = root setting = yes } }
			}
		}

		# Gets a suitable place to place Volunteer Building in the target country
		scope:target_country = {
			OR = {
				any_scope_state = {
					has_building = building:building_port
					controller = scope:target_country
					save_temporary_scope_as = safe_volunteer_state
				}
				any_scope_state = {
					is_adjacent = root
					controller = scope:target_country
					save_temporary_scope_as = safe_volunteer_state
				}
			}
		}

		# Gets the tech of the root country to calculate what volunteer building is built in the target country

		root = {
			if = {
				limit = {
					has_technology_researched = motorized_infantry
					has_technology_researched = rocket_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 1
				}
			}

			else_if = {
				limit = {
					has_technology_researched = motorized_infantry
					has_technology_researched = wargaming
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 2
				}
			}

			else_if = {
				limit = {
					has_technology_researched = nco_training
					has_technology_researched = wargaming
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 3
				}
			}

			else_if = {
				limit = {
					has_technology_researched = nco_training
					has_technology_researched = breech_loading_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 4
				}
			}

			else_if = {
				limit = {
					has_technology_researched = trench_works
					has_technology_researched = wargaming
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 5
				}
			}

			else_if = {
				limit = {
					has_technology_researched = trench_works
					has_technology_researched = breech_loading_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 6
				}
			}

			else_if = {
				limit = {
					has_technology_researched = general_staff
					has_technology_researched = breech_loading_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 7
				}
			}

			else_if = {
				limit = {
					has_technology_researched = general_staff
					has_technology_researched = napoleonic_warfare
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 8
				}
			}

		}

		# Creates a building in the root country that simulates sending goods to the target country, since for whatever reason paradox never added a way to artificially create buy orders... major BRUH moment

		root = {
			if = {
				limit = {
					var:building_to_build_volunteer = 1
				}
			}

		}
	}

	pact = {
		cost = 200

		show_in_outliner = yes
		relations_progress_per_day = 6
		relations_improvement_max = 100

		break_effect = {
			while = { # Deletes all Arms Industries
				limit = {
					owner = {
						any_scope_state = {
							has_building = building_arms_industry
							count > 0
							save_temporary_scope_as = armed_state_arms
						}
					}
				}
				scope:armed_state_arms = {
					remove_building = building_arms_industry
				}
			}
		}

	}

	ai = {
		value = -10000
	}
}