send_volunteers = {

	requires_approval = yes
	
	unlocking_technologies = {
		logistics
	}

	potential = {
		NOT = { is_country_type = decentralized }
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}

		custom_tooltip = {
			text = DIPLO_ACTION_MARKET_CONNECTION_REQUIRED
			OR = {	
				AND = {
					market = { has_port = yes }
					scope:target_country.market = { has_port = yes }
				}
				scope:actor.market = {
					any_scope_country = {
						is_adjacent = root
					}
				}
			}
		}

		is_at_war = no
	}

	possible = {
		scope:target_country = {
			is_at_war = yes
			NOT = { is_diplomatic_play_enemy_of = ROOT }
		}
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}
		NOT = { has_war_with = scope:target_country }
		has_diplomatic_relevance = scope:target_country		
		has_technology_researched = napoleonic_warfare
		has_technology_researched = general_staff
		custom_tooltip = {
			text = not_sending_volunteers
			NOT = {
				any_country = {
					has_diplomatic_pact = {
						who = root
						type = send_volunteers
					}
				}
			}
		}
		is_player = yes
	}

	accept_effect = {

		scope:target_country = {
			set_variable = {
				name = building_to_build_volunteer
				value = 0
			}
		}	
	
		root = {
			set_variable = {
				name = is_sending_volunteers
				value = 1
			}
		}

		any_scope_country = { # Sends a notification to the relevant countries that this country is sending volunteers
			if = {
				limit = {
					has_overlapping_interests = scope:target_country
				}
				post_notification = country_sends_volunteers
			}
			else_if = {
				limit = {
					has_overlapping_interests = root
				}
				post_notification = country_sends_volunteers
			}
		}

		# Gets a suitable state to place Volunteer Building in the target country

		scope:target_country = {
				every_scope_state = {
					if = {
						limit = {
							has_port = yes
							controller = scope:target_country
						}
						save_scope_as = safe_volunteer_state
					}
					else_if = {
						limit = {
							is_capital = yes
							controller = scope:target_country
						}
						save_scope_as = safe_volunteer_state
					}
				}
			}

		# Gets the tech of the root country to calculate what volunteer building is built in the target country

		root = {
			if = {
				limit = {
					has_technology_researched = motorized_infantry
					has_technology_researched = rocket_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 1
				}
			}

			else_if = {
				limit = {
					has_technology_researched = motorized_infantry
					has_technology_researched = wargaming
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 2
				}
			}

			else_if = {
				limit = {
					has_technology_researched = nco_training
					has_technology_researched = wargaming
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 3
				}
			}

			else_if = {
				limit = {
					has_technology_researched = nco_training
					has_technology_researched = breech_loading_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 4
				}
			}

			else_if = {
				limit = {
					has_technology_researched = trench_works
					has_technology_researched = wargaming
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 5
				}
			}

			else_if = {
				limit = {
					has_technology_researched = trench_works
					has_technology_researched = breech_loading_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 6
				}
			}

			else_if = {
				limit = {
					has_technology_researched = general_staff
					has_technology_researched = breech_loading_artillery
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 7
				}
			}

			else_if = {
				limit = {
					has_technology_researched = general_staff
					has_technology_researched = napoleonic_warfare
				}
				set_variable = {
					name = building_to_build_volunteer
					value = 8
				}
			}

			else = {
				set_variable = {
					name = building_to_build_volunteer
					value = 0
				}
			}
		}

		# Creates a building in the root country that simulates sending goods to the target country, since for whatever reason paradox never added a way to artificially create buy orders... major BRUH moment

		root = {
			if = {
				limit = {
					var:building_to_build_volunteer = 1
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_motorized_rocket"
							reserves = 1
							level = 5
						}
					}
				}
			}

			else_if = {
				limit = {
					var:building_to_build_volunteer = 2
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_motorized_siege"
							reserves = 1
							level = 5
						}
					}
				}
			}

			else_if = {
				limit = {
					var:building_to_build_volunteer = 3
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_squad_siege"
							reserves = 1
							level = 5
						}
					}
				}
			}

			else_if = {
				limit = {
					var:building_to_build_volunteer = 4
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_squad_breech"
							reserves = 1
							level = 5
						}
					}
				}
			}

			else_if = {
				limit = {
					var:building_to_build_volunteer = 5
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_trench_siege"
							reserves = 1
							level = 5
						}
					}
				}
			}

			else_if = {
				limit = {
					var:building_to_build_volunteer = 6
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_trench_breech"
							reserves = 1
							level = 5
						}
					}
				}
			}

			else_if = {
				limit = {
					var:building_to_build_volunteer = 7
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_skirmish_shrapnel"
							reserves = 1
							level = 5
						}
					}
				}
			}

			else_if = {
				limit = {
					var:building_to_build_volunteer = 8
				}
				every_scope_state = {
					if = {
						limit = {
							is_capital = yes
						}
						save_scope_as = volunteer_office_state
						create_building = {
							building = "building_office_skirmish_mobile"
							reserves = 1
							level = 5
						}
					}
				}
			}
			else = {

			}
		}

		# Create the volunteer building in the target country
		scope:target_country = {
			if = {
				limit = {
					root.var:building_to_build_volunteer = 1
				}
					scope:safe_volunteer_state = {
						create_building = {
						building = "building_volunteer_motorized_rocket"
						reserves = 1
						level = 5
					}
				}
			}

			else_if = {
				limit = {
					root.var:building_to_build_volunteer = 2
				}
				scope:safe_volunteer_state = {
					create_building = {
					building = "building_volunteer_motorized_siege"
					reserves = 1
					level = 5
					}
				}
			}

			else_if = {
				limit = {
					root.var:building_to_build_volunteer = 3
				}
				scope:safe_volunteer_state = {
					create_building = {
					building = "building_volunteer_squad_siege"
					reserves = 1
					level = 5
					}
				}
			}

			else_if = {
				limit = {
					root.var:building_to_build_volunteer = 4
				}
				scope:safe_volunteer_state = {
					create_building = {
					building = "building_volunteer_squad_breech"
					reserves = 1
					level = 5
					}
				}
			}

			else_if = {
				limit = {
					root.var:building_to_build_volunteer = 5
				}
				scope:safe_volunteer_state = {
					create_building = {
					building = "building_volunteer_trench_siege"
					reserves = 1
					level = 5
					}
				}
			}

			else_if = {
				limit = {
					root.var:building_to_build_volunteer = 6
				}
				scope:safe_volunteer_state = {
					create_building = {
					building = "building_volunteer_trench_breech"
					reserves = 1
					level = 5
					}
				}
			}

			else_if = {
				limit = {
					root.var:building_to_build_volunteer = 7
				}
				scope:safe_volunteer_state = {
					create_building = {
					building = "building_volunteer_skirmish_shrapnel"
					reserves = 1
					level = 5
					}
				}
			}

			else_if = {
				limit = {
					root.var:building_to_build_volunteer = 8
				}
				scope:safe_volunteer_state = {
					create_building = {
					building = "building_volunteer_skirmish_mobile"
					reserves = 1
					level = 5
					}
				}
			}
			
			else = {
				set_variable = {
					name = cancel_send_volunteers
					value = 1
				}
			}

		}

		root = { # Gets Primary Culture of Root
			random_scope_culture = {
				limit = { 
					is_primary_culture_of = ROOT 
				}
				save_scope_as = country_majority_culture
			}
		}

		scope:safe_volunteer_state = {
			create_pop = {
				pop_type = soldiers
				culture = yankee
				size = 5000
			}
		}
	}

	pact = {
		cost = 400

		show_in_outliner = yes
		relations_progress_per_day = 4
		relations_improvement_max = 80

		weekly_effect = { # Chance to get an Obligation
			custom_tooltip = {
				text = bankroll_weekly_obligation_effect
				if = {
					limit = {
						root = {
							owes_obligation_to = scope:target_country			
						}						
					}
					random_list = { 
						980 = {}
						10 = { root = { set_owes_obligation_to = { country = scope:target_country setting = no } } }
					}				
				}		
				else_if = {
					limit = {
						NOT = { 
							scope:target_country = {
								owes_obligation_to = root			
							}						
						}
					}
					random_list = { 
						980 = {}
						10 = { scope:target_country = { set_owes_obligation_to = { country = root setting = yes } } }
					}
				}				
			}

			hidden_effect = { # Test to see if the building has any input shortage goods
				if = {
					limit = {
						scope:volunteer_office_state = {
							any_scope_building = {
								is_building_group = bg_volunteer_building
								building_has_goods_shortage = yes
							}
						}
					}
					set_variable = {
						name = out_of_supplies
						value = 1
					}
				}
				else = {
					set_variable = {
						name = out_of_supplies
						value = 0
					}
				}
			}
		}

		should_auto_break = {
			OR = {
				scope:target_country = {
					is_at_war = no
				}
				var:out_of_supplies = 1
			}
		}

		break_effect = { 

			scope:target_country = {
				every_scope_state = {
					if = {
						limit = { has_building = "building_volunteer_motorized_rocket" }
						remove_building = building_volunteer_motorized_rocket
					}
					else_if = {
						limit = { has_building = "building_volunteer_motorized_siege" }
						remove_building = building_volunteer_motorized_siege
					}
					else_if = {
						limit = { has_building = "building_volunteer_squad_siege" }
						remove_building = building_volunteer_squad_siege
					}
					else_if = {
						limit = { has_building = "building_volunteer_squad_breech" }
						remove_building = building_volunteer_squad_breech
					}
					else_if = {
						limit = { has_building = "building_volunteer_trench_siege" }
						remove_building = building_volunteer_trench_siege
					}
					else_if = {
						limit = { has_building = "building_volunteer_trench_breech" }
						remove_building = building_volunteer_trench_breech
					}
					else_if = {
						limit = { has_building = "building_volunteer_skirmish_shrapnel" }
						remove_building = building_volunteer_skirmish_shrapnel
					}
					else_if = {
						limit = { has_building = "building_volunteer_skirmish_mobile" }
						remove_building = building_volunteer_skirmish_mobile
					}
				}
			}

			root = { 
				every_scope_state = {
					if = {
						limit = { has_building = "building_office_motorized_rocket" }
						remove_building = building_office_motorized_rocket
					}
					else_if = {
						limit = { has_building = "building_office_motorized_siege" }
						remove_building = building_office_motorized_siege
					}
					else_if = {
						limit = { has_building = "building_office_squad_siege" }
						remove_building = building_office_squad_siege
					}
					else_if = {
						limit = { has_building = "building_office_squad_breech" }
						remove_building = building_office_squad_breech
					}
					else_if = {
						limit = { has_building = "building_office_trench_siege" }
						remove_building = building_office_trench_siege
					}
					else_if = {
						limit = { has_building = "building_office_trench_breech" }
						remove_building = building_office_trench_breech
					}
					else_if = {
						limit = { has_building = "building_office_skirmish_shrapnel" }
						remove_building = building_office_skirmish_shrapnel
					}
					else_if = {
						limit = { has_building = "building_office_skirmish_mobile" }
						remove_building = building_office_skirmish_mobile
					}
				}
			}
			
			root = {
				set_variable = {
					name = is_sending_volunteers
					value = 0
				}
			}
		}
	}

	ai = {
		propose_score = {
			value = -1000
		}	
	}

}